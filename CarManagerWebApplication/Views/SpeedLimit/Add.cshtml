@model CarManagerWebApplication.Models.AddSpeedLimitModel

@{
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}

@using (Html.BeginForm("Save", "SpeedLimit", FormMethod.Post, new { ReturnUrl = ViewBag.ReturnUrl, id = "submitForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <h3>Please select Drivers, Cars, and Day restrictions.</h3>
    <div class="form-horizontal">
        <div class="well bs-component">
            <fieldset>
                <div class="form-group">
                    <label for="drivers" class="col-lg-2 control-label">Drivers</label>
                    <div class="col-lg-10">
                        @Html.ListBoxFor(m => m.SelectedDrivers, new MultiSelectList(Model.Drivers, "Id", "Name"), new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="cars" class="col-lg-2 control-label">Cars</label>
                    <div class="col-lg-10">
                        @Html.ListBoxFor(m => m.SelectedCars, new MultiSelectList(Model.Cars, "Id", "Model"), new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="WarningLimit" class="col-lg-2 control-label">Warning Limit</label>
                    <div class="col-lg-10">
                        @Html.TextBoxFor(m => Model.WarningLimit, new { @class = "form-control", @placeholder = "Warning Limit" })
                        @Html.ValidationMessageFor(m => Model.WarningLimit)
                    </div>
                </div>
                <div class="form-group">
                    <label for="MaxtBrokeWarningLimit" class="col-lg-2 control-label">Warning Max Times</label>
                    <div class="col-lg-10">@Html.TextBoxFor(m => Model.MaxtBrokeWarningLimit, new { @class = "form-control", @placeholder = "Warning Max Times" })
                    @Html.ValidationMessageFor(m => Model.MaxtBrokeWarningLimit)
                    </div>
                </div>
                <div class="form-group">
                    <label for="PunishmentLimit" class="col-lg-2 control-label">Punishment Limit</label>
                    <div class="col-lg-10">
                        @Html.TextBoxFor(m => Model.PunishmentLimit, new { @class = "form-control", @placeholder = "Punishment Limit" })
                        @Html.ValidationMessageFor(m => Model.PunishmentLimit)
                    </div>
                </div>
                <div class="form-group">
                    <label for="WarningLimit" class="col-lg-2 control-label">Punishment Max Times</label>
                    <div class="col-lg-10">
                        @Html.TextBoxFor(m => Model.MaxtBrokePunishmentLimit, new { @class = "form-control", @placeholder = "Punishment Max Times" })
                        @Html.ValidationMessageFor(m => Model.MaxtBrokePunishmentLimit)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-lg-10 col-lg-offset-2">
                        <input type="submit" value="Submit" id="Submit" class="btn btn-primary" />
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
}

<a href="javascript:history.back()"><< Go Back</a>


<div id="save-dialog" title="Save" style="display:none">
</div>

<div style="display:none">
    @Html.ActionLink("SpeedLimit", "Index", "SpeedLimit", null, new { id = "backLink" })
</div>

<script>
    $(document).ready(function () {
        $('#submitForm').submit(function () {
            $.SaveDataOnFormSubmit({
                form: $('#submitForm'),
                returnToUrl: $('#backLink').attr('href'),
                dialog: {
                    title: 'Add Speed Limit',
                    message: 'Adding Speed Limit',
                    errorMessage: 'Error occured while adding speed Limit.'
                }
            });

            return false;
        });
    });

    //$(document).ready(function () {

    //    $('#save-dialog').dialog({
    //        autoOpen: false, width: 400, resizable: false, modal: true, //Dialog options
    //        buttons: {
    //            "OK": function () {
    //                $(this).dialog("close");
    //                var url = $('#backLink').attr('href');;
    //                window.location.href = url;
    //            }
    //        }
    //    });

    //    $('#save-dialog').text('Adding Speed Limit').find('.ui-dialog-buttonpane .ui-button').hide();

    //    var form = $('#submitForm');
    //    $('#submitForm').submit(function () {
    //        $('#save-dialog').dialog('open');
    //        $.ajax({
    //            cache: false,
    //            async: true,
    //            type: "POST",
    //            url: form.attr('action'),
    //            data: form.serialize(),
    //            success: function (data) {
    //                $('#save-dialog').text(data).dialog('widget').find('.ui-dialog-buttonpane .ui-button').show(); //
    //            },
    //            error: function (data) {
    //                $.alert('Error occured while adding speed Limit.');
    //            }
    //        });

    //        return false;
    //    });
    //});
</script>

