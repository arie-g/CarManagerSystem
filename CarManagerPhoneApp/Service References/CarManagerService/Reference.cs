//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace CarManagerPhoneApp.CarManagerService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOfArrayOfguidArrayOfguid0dMmj3_Sh", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    public partial struct KeyValuePairOfArrayOfguidArrayOfguid0dMmj3_Sh : System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<System.Guid> keyField;
        
        private System.Collections.ObjectModel.ObservableCollection<System.Guid> valueField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> key {
            get {
                return this.keyField;
            }
            set {
                if ((object.ReferenceEquals(this.keyField, value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eRecognizeStatus", Namespace="http://schemas.datacontract.org/2004/07/CarManagerCommon")]
    public enum eRecognizeStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotRecognized = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        User = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Driver = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DriveStatistics", Namespace="http://schemas.datacontract.org/2004/07/CarManagerCommon")]
    public partial class DriveStatistics : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid CarIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.DrivePackage> DataField;
        
        private System.Guid DriverIdField;
        
        private System.DateTime FinishDriveField;
        
        private System.DateTime StartDriveField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarId {
            get {
                return this.CarIdField;
            }
            set {
                if ((this.CarIdField.Equals(value) != true)) {
                    this.CarIdField = value;
                    this.RaisePropertyChanged("CarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.DrivePackage> Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DriverId {
            get {
                return this.DriverIdField;
            }
            set {
                if ((this.DriverIdField.Equals(value) != true)) {
                    this.DriverIdField = value;
                    this.RaisePropertyChanged("DriverId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FinishDrive {
            get {
                return this.FinishDriveField;
            }
            set {
                if ((this.FinishDriveField.Equals(value) != true)) {
                    this.FinishDriveField = value;
                    this.RaisePropertyChanged("FinishDrive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDrive {
            get {
                return this.StartDriveField;
            }
            set {
                if ((this.StartDriveField.Equals(value) != true)) {
                    this.StartDriveField = value;
                    this.RaisePropertyChanged("StartDrive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DrivePackage", Namespace="http://schemas.datacontract.org/2004/07/Dal")]
    public partial class DrivePackage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> EngineTempField;
        
        private System.Nullable<int> RPMField;
        
        private CarManagerPhoneApp.CarManagerService.Ride RideField;
        
        private System.Guid RideIdField;
        
        private System.Nullable<int> SpeedField;
        
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EngineTemp {
            get {
                return this.EngineTempField;
            }
            set {
                if ((this.EngineTempField.Equals(value) != true)) {
                    this.EngineTempField = value;
                    this.RaisePropertyChanged("EngineTemp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RPM {
            get {
                return this.RPMField;
            }
            set {
                if ((this.RPMField.Equals(value) != true)) {
                    this.RPMField = value;
                    this.RaisePropertyChanged("RPM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Ride Ride {
            get {
                return this.RideField;
            }
            set {
                if ((object.ReferenceEquals(this.RideField, value) != true)) {
                    this.RideField = value;
                    this.RaisePropertyChanged("Ride");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RideId {
            get {
                return this.RideIdField;
            }
            set {
                if ((this.RideIdField.Equals(value) != true)) {
                    this.RideIdField = value;
                    this.RaisePropertyChanged("RideId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ride", Namespace="http://schemas.datacontract.org/2004/07/Dal")]
    public partial class Ride : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CarManagerPhoneApp.CarManagerService.Car CarField;
        
        private System.Guid CarIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.DrivePackage> DrivePackagesField;
        
        private CarManagerPhoneApp.CarManagerService.Driver DriverField;
        
        private System.Guid DriverIDField;
        
        private System.Nullable<bool> EmergencyField;
        
        private System.Nullable<System.DateTime> EndDriveField;
        
        private System.Guid IdField;
        
        private System.DateTime StartDriveField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Car Car {
            get {
                return this.CarField;
            }
            set {
                if ((object.ReferenceEquals(this.CarField, value) != true)) {
                    this.CarField = value;
                    this.RaisePropertyChanged("Car");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarID {
            get {
                return this.CarIDField;
            }
            set {
                if ((this.CarIDField.Equals(value) != true)) {
                    this.CarIDField = value;
                    this.RaisePropertyChanged("CarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.DrivePackage> DrivePackages {
            get {
                return this.DrivePackagesField;
            }
            set {
                if ((object.ReferenceEquals(this.DrivePackagesField, value) != true)) {
                    this.DrivePackagesField = value;
                    this.RaisePropertyChanged("DrivePackages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Driver Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DriverID {
            get {
                return this.DriverIDField;
            }
            set {
                if ((this.DriverIDField.Equals(value) != true)) {
                    this.DriverIDField = value;
                    this.RaisePropertyChanged("DriverID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Emergency {
            get {
                return this.EmergencyField;
            }
            set {
                if ((this.EmergencyField.Equals(value) != true)) {
                    this.EmergencyField = value;
                    this.RaisePropertyChanged("Emergency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDrive {
            get {
                return this.EndDriveField;
            }
            set {
                if ((this.EndDriveField.Equals(value) != true)) {
                    this.EndDriveField = value;
                    this.RaisePropertyChanged("EndDrive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDrive {
            get {
                return this.StartDriveField;
            }
            set {
                if ((this.StartDriveField.Equals(value) != true)) {
                    this.StartDriveField = value;
                    this.RaisePropertyChanged("StartDrive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/Dal")]
    public partial class Car : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.CarsToDriver> CarsToDriversField;
        
        private CarManagerPhoneApp.CarManagerService.Company CompanyField;
        
        private System.Guid CompanyIdField;
        
        private System.Guid IdField;
        
        private System.Nullable<System.DateTime> LastPermissionUpdateField;
        
        private string ModelField;
        
        private long NumberField;
        
        private System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.Ride> RidesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.CarsToDriver> CarsToDrivers {
            get {
                return this.CarsToDriversField;
            }
            set {
                if ((object.ReferenceEquals(this.CarsToDriversField, value) != true)) {
                    this.CarsToDriversField = value;
                    this.RaisePropertyChanged("CarsToDrivers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Company Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastPermissionUpdate {
            get {
                return this.LastPermissionUpdateField;
            }
            set {
                if ((this.LastPermissionUpdateField.Equals(value) != true)) {
                    this.LastPermissionUpdateField = value;
                    this.RaisePropertyChanged("LastPermissionUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.Ride> Rides {
            get {
                return this.RidesField;
            }
            set {
                if ((object.ReferenceEquals(this.RidesField, value) != true)) {
                    this.RidesField = value;
                    this.RaisePropertyChanged("Rides");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Driver", Namespace="http://schemas.datacontract.org/2004/07/Dal")]
    public partial class Driver : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.CarsToDriver> CarsToDriversField;
        
        private System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.DriverToCompany> DriverToCompaniesField;
        
        private System.Nullable<short> ExperienceYearsField;
        
        private string FamilyNameField;
        
        private System.Guid IdField;
        
        private string LicenceField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.Ride> RidesField;
        
        private CarManagerPhoneApp.CarManagerService.Role_EngineTempLimit Role_EngineTempLimitField;
        
        private CarManagerPhoneApp.CarManagerService.Role_RPMLimit Role_RPMLimitField;
        
        private CarManagerPhoneApp.CarManagerService.Role_SpeedLimit Role_SpeedLimitField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.CarsToDriver> CarsToDrivers {
            get {
                return this.CarsToDriversField;
            }
            set {
                if ((object.ReferenceEquals(this.CarsToDriversField, value) != true)) {
                    this.CarsToDriversField = value;
                    this.RaisePropertyChanged("CarsToDrivers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.DriverToCompany> DriverToCompanies {
            get {
                return this.DriverToCompaniesField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverToCompaniesField, value) != true)) {
                    this.DriverToCompaniesField = value;
                    this.RaisePropertyChanged("DriverToCompanies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ExperienceYears {
            get {
                return this.ExperienceYearsField;
            }
            set {
                if ((this.ExperienceYearsField.Equals(value) != true)) {
                    this.ExperienceYearsField = value;
                    this.RaisePropertyChanged("ExperienceYears");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Licence {
            get {
                return this.LicenceField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenceField, value) != true)) {
                    this.LicenceField = value;
                    this.RaisePropertyChanged("Licence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.Ride> Rides {
            get {
                return this.RidesField;
            }
            set {
                if ((object.ReferenceEquals(this.RidesField, value) != true)) {
                    this.RidesField = value;
                    this.RaisePropertyChanged("Rides");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Role_EngineTempLimit Role_EngineTempLimit {
            get {
                return this.Role_EngineTempLimitField;
            }
            set {
                if ((object.ReferenceEquals(this.Role_EngineTempLimitField, value) != true)) {
                    this.Role_EngineTempLimitField = value;
                    this.RaisePropertyChanged("Role_EngineTempLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Role_RPMLimit Role_RPMLimit {
            get {
                return this.Role_RPMLimitField;
            }
            set {
                if ((object.ReferenceEquals(this.Role_RPMLimitField, value) != true)) {
                    this.Role_RPMLimitField = value;
                    this.RaisePropertyChanged("Role_RPMLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Role_SpeedLimit Role_SpeedLimit {
            get {
                return this.Role_SpeedLimitField;
            }
            set {
                if ((object.ReferenceEquals(this.Role_SpeedLimitField, value) != true)) {
                    this.Role_SpeedLimitField = value;
                    this.RaisePropertyChanged("Role_SpeedLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Company", Namespace="http://schemas.datacontract.org/2004/07/Dal")]
    public partial class Company : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.Car> CarsField;
        
        private System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.DriverToCompany> DriverToCompaniesField;
        
        private string EmailField;
        
        private System.Guid IdField;
        
        private string NameField;
        
        private string Phone_numberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.Car> Cars {
            get {
                return this.CarsField;
            }
            set {
                if ((object.ReferenceEquals(this.CarsField, value) != true)) {
                    this.CarsField = value;
                    this.RaisePropertyChanged("Cars");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.DriverToCompany> DriverToCompanies {
            get {
                return this.DriverToCompaniesField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverToCompaniesField, value) != true)) {
                    this.DriverToCompaniesField = value;
                    this.RaisePropertyChanged("DriverToCompanies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone_number {
            get {
                return this.Phone_numberField;
            }
            set {
                if ((object.ReferenceEquals(this.Phone_numberField, value) != true)) {
                    this.Phone_numberField = value;
                    this.RaisePropertyChanged("Phone_number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarsToDriver", Namespace="http://schemas.datacontract.org/2004/07/Dal")]
    public partial class CarsToDriver : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CarManagerPhoneApp.CarManagerService.Car CarField;
        
        private System.Guid CarIdField;
        
        private CarManagerPhoneApp.CarManagerService.Driver DriverField;
        
        private System.Guid DriverIdField;
        
        private System.Guid IdField;
        
        private CarManagerPhoneApp.CarManagerService.Role_DayRestriction Role_DayRestrictionField;
        
        private CarManagerPhoneApp.CarManagerService.Role_Punished Role_PunishedField;
        
        private CarManagerPhoneApp.CarManagerService.Role_RidesWithOutData Role_RidesWithOutDataField;
        
        private System.Nullable<bool> offlineRideAllowedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Car Car {
            get {
                return this.CarField;
            }
            set {
                if ((object.ReferenceEquals(this.CarField, value) != true)) {
                    this.CarField = value;
                    this.RaisePropertyChanged("Car");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarId {
            get {
                return this.CarIdField;
            }
            set {
                if ((this.CarIdField.Equals(value) != true)) {
                    this.CarIdField = value;
                    this.RaisePropertyChanged("CarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Driver Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DriverId {
            get {
                return this.DriverIdField;
            }
            set {
                if ((this.DriverIdField.Equals(value) != true)) {
                    this.DriverIdField = value;
                    this.RaisePropertyChanged("DriverId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Role_DayRestriction Role_DayRestriction {
            get {
                return this.Role_DayRestrictionField;
            }
            set {
                if ((object.ReferenceEquals(this.Role_DayRestrictionField, value) != true)) {
                    this.Role_DayRestrictionField = value;
                    this.RaisePropertyChanged("Role_DayRestriction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Role_Punished Role_Punished {
            get {
                return this.Role_PunishedField;
            }
            set {
                if ((object.ReferenceEquals(this.Role_PunishedField, value) != true)) {
                    this.Role_PunishedField = value;
                    this.RaisePropertyChanged("Role_Punished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Role_RidesWithOutData Role_RidesWithOutData {
            get {
                return this.Role_RidesWithOutDataField;
            }
            set {
                if ((object.ReferenceEquals(this.Role_RidesWithOutDataField, value) != true)) {
                    this.Role_RidesWithOutDataField = value;
                    this.RaisePropertyChanged("Role_RidesWithOutData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> offlineRideAllowed {
            get {
                return this.offlineRideAllowedField;
            }
            set {
                if ((this.offlineRideAllowedField.Equals(value) != true)) {
                    this.offlineRideAllowedField = value;
                    this.RaisePropertyChanged("offlineRideAllowed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role_DayRestriction", Namespace="http://schemas.datacontract.org/2004/07/Dal")]
    public partial class Role_DayRestriction : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid CarToDriverIdField;
        
        private CarManagerPhoneApp.CarManagerService.CarsToDriver CarsToDriverField;
        
        private System.Nullable<bool> FridayField;
        
        private System.Nullable<bool> MondayField;
        
        private System.Nullable<bool> SaturdayField;
        
        private System.Nullable<bool> SundayField;
        
        private System.Nullable<bool> ThursdayField;
        
        private System.Nullable<bool> TuesdayField;
        
        private System.Nullable<bool> WednesdayField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarToDriverId {
            get {
                return this.CarToDriverIdField;
            }
            set {
                if ((this.CarToDriverIdField.Equals(value) != true)) {
                    this.CarToDriverIdField = value;
                    this.RaisePropertyChanged("CarToDriverId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.CarsToDriver CarsToDriver {
            get {
                return this.CarsToDriverField;
            }
            set {
                if ((object.ReferenceEquals(this.CarsToDriverField, value) != true)) {
                    this.CarsToDriverField = value;
                    this.RaisePropertyChanged("CarsToDriver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Friday {
            get {
                return this.FridayField;
            }
            set {
                if ((this.FridayField.Equals(value) != true)) {
                    this.FridayField = value;
                    this.RaisePropertyChanged("Friday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Monday {
            get {
                return this.MondayField;
            }
            set {
                if ((this.MondayField.Equals(value) != true)) {
                    this.MondayField = value;
                    this.RaisePropertyChanged("Monday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Saturday {
            get {
                return this.SaturdayField;
            }
            set {
                if ((this.SaturdayField.Equals(value) != true)) {
                    this.SaturdayField = value;
                    this.RaisePropertyChanged("Saturday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Sunday {
            get {
                return this.SundayField;
            }
            set {
                if ((this.SundayField.Equals(value) != true)) {
                    this.SundayField = value;
                    this.RaisePropertyChanged("Sunday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Thursday {
            get {
                return this.ThursdayField;
            }
            set {
                if ((this.ThursdayField.Equals(value) != true)) {
                    this.ThursdayField = value;
                    this.RaisePropertyChanged("Thursday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Tuesday {
            get {
                return this.TuesdayField;
            }
            set {
                if ((this.TuesdayField.Equals(value) != true)) {
                    this.TuesdayField = value;
                    this.RaisePropertyChanged("Tuesday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Wednesday {
            get {
                return this.WednesdayField;
            }
            set {
                if ((this.WednesdayField.Equals(value) != true)) {
                    this.WednesdayField = value;
                    this.RaisePropertyChanged("Wednesday");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role_Punished", Namespace="http://schemas.datacontract.org/2004/07/Dal")]
    public partial class Role_Punished : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CarManagerPhoneApp.CarManagerService.CarsToDriver CarsToDriverField;
        
        private System.Guid DriverIdField;
        
        private System.DateTime expirationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.CarsToDriver CarsToDriver {
            get {
                return this.CarsToDriverField;
            }
            set {
                if ((object.ReferenceEquals(this.CarsToDriverField, value) != true)) {
                    this.CarsToDriverField = value;
                    this.RaisePropertyChanged("CarsToDriver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DriverId {
            get {
                return this.DriverIdField;
            }
            set {
                if ((this.DriverIdField.Equals(value) != true)) {
                    this.DriverIdField = value;
                    this.RaisePropertyChanged("DriverId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                if ((this.expirationDateField.Equals(value) != true)) {
                    this.expirationDateField = value;
                    this.RaisePropertyChanged("expirationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role_RidesWithOutData", Namespace="http://schemas.datacontract.org/2004/07/Dal")]
    public partial class Role_RidesWithOutData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid CarToDriverIdField;
        
        private CarManagerPhoneApp.CarManagerService.CarsToDriver CarsToDriverField;
        
        private short CountField;
        
        private short NumberOfAllowedRidesWithoutReportingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarToDriverId {
            get {
                return this.CarToDriverIdField;
            }
            set {
                if ((this.CarToDriverIdField.Equals(value) != true)) {
                    this.CarToDriverIdField = value;
                    this.RaisePropertyChanged("CarToDriverId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.CarsToDriver CarsToDriver {
            get {
                return this.CarsToDriverField;
            }
            set {
                if ((object.ReferenceEquals(this.CarsToDriverField, value) != true)) {
                    this.CarsToDriverField = value;
                    this.RaisePropertyChanged("CarsToDriver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short NumberOfAllowedRidesWithoutReporting {
            get {
                return this.NumberOfAllowedRidesWithoutReportingField;
            }
            set {
                if ((this.NumberOfAllowedRidesWithoutReportingField.Equals(value) != true)) {
                    this.NumberOfAllowedRidesWithoutReportingField = value;
                    this.RaisePropertyChanged("NumberOfAllowedRidesWithoutReporting");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role_EngineTempLimit", Namespace="http://schemas.datacontract.org/2004/07/Dal")]
    public partial class Role_EngineTempLimit : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid CarToDriverIdField;
        
        private System.Nullable<short> CountBrokePunishmentLimitField;
        
        private System.Nullable<short> CountBrokeWarningLimitField;
        
        private CarManagerPhoneApp.CarManagerService.Driver DriverField;
        
        private System.Nullable<short> MaxtBrokePunishmentLimitField;
        
        private System.Nullable<short> MaxtBrokeWarningLimitField;
        
        private System.Nullable<short> PunishmentLimitField;
        
        private System.Nullable<short> WarningLimitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarToDriverId {
            get {
                return this.CarToDriverIdField;
            }
            set {
                if ((this.CarToDriverIdField.Equals(value) != true)) {
                    this.CarToDriverIdField = value;
                    this.RaisePropertyChanged("CarToDriverId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CountBrokePunishmentLimit {
            get {
                return this.CountBrokePunishmentLimitField;
            }
            set {
                if ((this.CountBrokePunishmentLimitField.Equals(value) != true)) {
                    this.CountBrokePunishmentLimitField = value;
                    this.RaisePropertyChanged("CountBrokePunishmentLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CountBrokeWarningLimit {
            get {
                return this.CountBrokeWarningLimitField;
            }
            set {
                if ((this.CountBrokeWarningLimitField.Equals(value) != true)) {
                    this.CountBrokeWarningLimitField = value;
                    this.RaisePropertyChanged("CountBrokeWarningLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Driver Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MaxtBrokePunishmentLimit {
            get {
                return this.MaxtBrokePunishmentLimitField;
            }
            set {
                if ((this.MaxtBrokePunishmentLimitField.Equals(value) != true)) {
                    this.MaxtBrokePunishmentLimitField = value;
                    this.RaisePropertyChanged("MaxtBrokePunishmentLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MaxtBrokeWarningLimit {
            get {
                return this.MaxtBrokeWarningLimitField;
            }
            set {
                if ((this.MaxtBrokeWarningLimitField.Equals(value) != true)) {
                    this.MaxtBrokeWarningLimitField = value;
                    this.RaisePropertyChanged("MaxtBrokeWarningLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> PunishmentLimit {
            get {
                return this.PunishmentLimitField;
            }
            set {
                if ((this.PunishmentLimitField.Equals(value) != true)) {
                    this.PunishmentLimitField = value;
                    this.RaisePropertyChanged("PunishmentLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> WarningLimit {
            get {
                return this.WarningLimitField;
            }
            set {
                if ((this.WarningLimitField.Equals(value) != true)) {
                    this.WarningLimitField = value;
                    this.RaisePropertyChanged("WarningLimit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role_RPMLimit", Namespace="http://schemas.datacontract.org/2004/07/Dal")]
    public partial class Role_RPMLimit : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid CarToDriverIdField;
        
        private System.Nullable<short> CountBrokePunishmentLimitField;
        
        private System.Nullable<short> CountBrokeWarningLimitField;
        
        private CarManagerPhoneApp.CarManagerService.Driver DriverField;
        
        private System.Nullable<short> MaxtBrokePunishmentLimitField;
        
        private System.Nullable<short> MaxtBrokeWarningLimitField;
        
        private System.Nullable<short> PunishmentLimitField;
        
        private System.Nullable<short> WarningLimitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarToDriverId {
            get {
                return this.CarToDriverIdField;
            }
            set {
                if ((this.CarToDriverIdField.Equals(value) != true)) {
                    this.CarToDriverIdField = value;
                    this.RaisePropertyChanged("CarToDriverId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CountBrokePunishmentLimit {
            get {
                return this.CountBrokePunishmentLimitField;
            }
            set {
                if ((this.CountBrokePunishmentLimitField.Equals(value) != true)) {
                    this.CountBrokePunishmentLimitField = value;
                    this.RaisePropertyChanged("CountBrokePunishmentLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CountBrokeWarningLimit {
            get {
                return this.CountBrokeWarningLimitField;
            }
            set {
                if ((this.CountBrokeWarningLimitField.Equals(value) != true)) {
                    this.CountBrokeWarningLimitField = value;
                    this.RaisePropertyChanged("CountBrokeWarningLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Driver Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MaxtBrokePunishmentLimit {
            get {
                return this.MaxtBrokePunishmentLimitField;
            }
            set {
                if ((this.MaxtBrokePunishmentLimitField.Equals(value) != true)) {
                    this.MaxtBrokePunishmentLimitField = value;
                    this.RaisePropertyChanged("MaxtBrokePunishmentLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MaxtBrokeWarningLimit {
            get {
                return this.MaxtBrokeWarningLimitField;
            }
            set {
                if ((this.MaxtBrokeWarningLimitField.Equals(value) != true)) {
                    this.MaxtBrokeWarningLimitField = value;
                    this.RaisePropertyChanged("MaxtBrokeWarningLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> PunishmentLimit {
            get {
                return this.PunishmentLimitField;
            }
            set {
                if ((this.PunishmentLimitField.Equals(value) != true)) {
                    this.PunishmentLimitField = value;
                    this.RaisePropertyChanged("PunishmentLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> WarningLimit {
            get {
                return this.WarningLimitField;
            }
            set {
                if ((this.WarningLimitField.Equals(value) != true)) {
                    this.WarningLimitField = value;
                    this.RaisePropertyChanged("WarningLimit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role_SpeedLimit", Namespace="http://schemas.datacontract.org/2004/07/Dal")]
    public partial class Role_SpeedLimit : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid CarToDriverIdField;
        
        private System.Nullable<short> CountBrokePunishmentLimitField;
        
        private System.Nullable<short> CountBrokeWarningLimitField;
        
        private CarManagerPhoneApp.CarManagerService.Driver DriverField;
        
        private System.Nullable<short> MaxtBrokePunishmentLimitField;
        
        private System.Nullable<short> MaxtBrokeWarningLimitField;
        
        private System.Nullable<short> PunishmentLimitField;
        
        private System.Nullable<short> WarningLimitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarToDriverId {
            get {
                return this.CarToDriverIdField;
            }
            set {
                if ((this.CarToDriverIdField.Equals(value) != true)) {
                    this.CarToDriverIdField = value;
                    this.RaisePropertyChanged("CarToDriverId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CountBrokePunishmentLimit {
            get {
                return this.CountBrokePunishmentLimitField;
            }
            set {
                if ((this.CountBrokePunishmentLimitField.Equals(value) != true)) {
                    this.CountBrokePunishmentLimitField = value;
                    this.RaisePropertyChanged("CountBrokePunishmentLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CountBrokeWarningLimit {
            get {
                return this.CountBrokeWarningLimitField;
            }
            set {
                if ((this.CountBrokeWarningLimitField.Equals(value) != true)) {
                    this.CountBrokeWarningLimitField = value;
                    this.RaisePropertyChanged("CountBrokeWarningLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Driver Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MaxtBrokePunishmentLimit {
            get {
                return this.MaxtBrokePunishmentLimitField;
            }
            set {
                if ((this.MaxtBrokePunishmentLimitField.Equals(value) != true)) {
                    this.MaxtBrokePunishmentLimitField = value;
                    this.RaisePropertyChanged("MaxtBrokePunishmentLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MaxtBrokeWarningLimit {
            get {
                return this.MaxtBrokeWarningLimitField;
            }
            set {
                if ((this.MaxtBrokeWarningLimitField.Equals(value) != true)) {
                    this.MaxtBrokeWarningLimitField = value;
                    this.RaisePropertyChanged("MaxtBrokeWarningLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> PunishmentLimit {
            get {
                return this.PunishmentLimitField;
            }
            set {
                if ((this.PunishmentLimitField.Equals(value) != true)) {
                    this.PunishmentLimitField = value;
                    this.RaisePropertyChanged("PunishmentLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> WarningLimit {
            get {
                return this.WarningLimitField;
            }
            set {
                if ((this.WarningLimitField.Equals(value) != true)) {
                    this.WarningLimitField = value;
                    this.RaisePropertyChanged("WarningLimit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DriverToCompany", Namespace="http://schemas.datacontract.org/2004/07/Dal")]
    public partial class DriverToCompany : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool ApprovedField;
        
        private CarManagerPhoneApp.CarManagerService.Company CompanyField;
        
        private System.Guid CompanyIdField;
        
        private CarManagerPhoneApp.CarManagerService.Driver DriverField;
        
        private System.Guid DriverIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Approved {
            get {
                return this.ApprovedField;
            }
            set {
                if ((this.ApprovedField.Equals(value) != true)) {
                    this.ApprovedField = value;
                    this.RaisePropertyChanged("Approved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Company Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarManagerPhoneApp.CarManagerService.Driver Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DriverId {
            get {
                return this.DriverIdField;
            }
            set {
                if ((this.DriverIdField.Equals(value) != true)) {
                    this.DriverIdField = value;
                    this.RaisePropertyChanged("DriverId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOfguidstring", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    public partial struct KeyValuePairOfguidstring : System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid keyField;
        
        private string valueField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid key {
            get {
                return this.keyField;
            }
            set {
                if ((this.keyField.Equals(value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CarManagerService.ICarManagerApi")]
    public interface ICarManagerApi {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/TimeToUpdateAuthorizedList", ReplyAction="http://tempuri.org/ICarManagerApi/TimeToUpdateAuthorizedListResponse")]
        System.IAsyncResult BeginTimeToUpdateAuthorizedList(string carPlateNumber, System.AsyncCallback callback, object asyncState);
        
        bool EndTimeToUpdateAuthorizedList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/RestrictDrivingTime", ReplyAction="http://tempuri.org/ICarManagerApi/RestrictDrivingTimeResponse")]
        System.IAsyncResult BeginRestrictDrivingTime(System.Guid carToDriverGuid, System.DateTime startTime, System.DateTime endTime, System.AsyncCallback callback, object asyncState);
        
        void EndRestrictDrivingTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/CheckBreakingRoles", ReplyAction="http://tempuri.org/ICarManagerApi/CheckBreakingRolesResponse")]
        System.IAsyncResult BeginCheckBreakingRoles(System.Guid driverId, string carPlateNumber, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<int> EndCheckBreakingRoles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/GetOfflineAndEmergencyAllowedDrivers", ReplyAction="http://tempuri.org/ICarManagerApi/GetOfflineAndEmergencyAllowedDriversResponse")]
        System.IAsyncResult BeginGetOfflineAndEmergencyAllowedDrivers(string carNumber, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<CarManagerPhoneApp.CarManagerService.KeyValuePairOfArrayOfguidArrayOfguid0dMmj3_Sh> EndGetOfflineAndEmergencyAllowedDrivers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/CarIdByCarLicence", ReplyAction="http://tempuri.org/ICarManagerApi/CarIdByCarLicenceResponse")]
        System.IAsyncResult BeginCarIdByCarLicence(string carLicence, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<System.Guid> EndCarIdByCarLicence(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/StartNewRide", ReplyAction="http://tempuri.org/ICarManagerApi/StartNewRideResponse")]
        System.IAsyncResult BeginStartNewRide(System.Guid driverId, System.DateTime startTime, string carLicenceId, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<System.Guid> EndStartNewRide(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/RecognizeUserStatus", ReplyAction="http://tempuri.org/ICarManagerApi/RecognizeUserStatusResponse")]
        System.IAsyncResult BeginRecognizeUserStatus(string providerUserId, System.AsyncCallback callback, object asyncState);
        
        CarManagerPhoneApp.CarManagerService.eRecognizeStatus EndRecognizeUserStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/UpdateOfflineRide", ReplyAction="http://tempuri.org/ICarManagerApi/UpdateOfflineRideResponse")]
        System.IAsyncResult BeginUpdateOfflineRide(CarManagerPhoneApp.CarManagerService.DriveStatistics statistics, bool emergencyRide, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateOfflineRide(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/DriverIdByUserId", ReplyAction="http://tempuri.org/ICarManagerApi/DriverIdByUserIdResponse")]
        System.IAsyncResult BeginDriverIdByUserId(int userId, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<System.Guid> EndDriverIdByUserId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/DriversToApprove", ReplyAction="http://tempuri.org/ICarManagerApi/DriversToApproveResponse")]
        System.IAsyncResult BeginDriversToApprove(System.Guid companyId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<System.Guid> EndDriversToApprove(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/DriverIdByProviderId", ReplyAction="http://tempuri.org/ICarManagerApi/DriverIdByProviderIdResponse")]
        System.IAsyncResult BeginDriverIdByProviderId(string providerUserId, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<System.Guid> EndDriverIdByProviderId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/ApproveDrivers", ReplyAction="http://tempuri.org/ICarManagerApi/ApproveDriversResponse")]
        System.IAsyncResult BeginApproveDrivers(System.Collections.ObjectModel.ObservableCollection<System.Guid> driversIdList, System.Guid CompanyId, System.AsyncCallback callback, object asyncState);
        
        bool EndApproveDrivers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/AddDriver", ReplyAction="http://tempuri.org/ICarManagerApi/AddDriverResponse")]
        System.IAsyncResult BeginAddDriver(CarManagerPhoneApp.CarManagerService.Driver newDriver, System.Collections.ObjectModel.ObservableCollection<System.Guid> companiesId, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<System.Guid> EndAddDriver(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/UserIdByProviderId", ReplyAction="http://tempuri.org/ICarManagerApi/UserIdByProviderIdResponse")]
        System.IAsyncResult BeginUserIdByProviderId(string providerId, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<int> EndUserIdByProviderId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/EmergencyDriveByFacebookId", ReplyAction="http://tempuri.org/ICarManagerApi/EmergencyDriveByFacebookIdResponse")]
        System.IAsyncResult BeginEmergencyDriveByFacebookId(string providerUserId, string carPlateNumber, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<System.Guid> EndEmergencyDriveByFacebookId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/EmergencyDrive", ReplyAction="http://tempuri.org/ICarManagerApi/EmergencyDriveResponse")]
        System.IAsyncResult BeginEmergencyDrive(System.Guid driverId, string carPlateNumber, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<System.Guid> EndEmergencyDrive(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/SendRideStatistics", ReplyAction="http://tempuri.org/ICarManagerApi/SendRideStatisticsResponse")]
        System.IAsyncResult BeginSendRideStatistics(CarManagerPhoneApp.CarManagerService.DriveStatistics stas, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<System.Guid> EndSendRideStatistics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/SendDrivePackage", ReplyAction="http://tempuri.org/ICarManagerApi/SendDrivePackageResponse")]
        System.IAsyncResult BeginSendDrivePackage(System.Guid rideId, CarManagerPhoneApp.CarManagerService.DrivePackage driveStas, System.AsyncCallback callback, object asyncState);
        
        void EndSendDrivePackage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarManagerApi/GetCompanies", ReplyAction="http://tempuri.org/ICarManagerApi/GetCompaniesResponse")]
        System.IAsyncResult BeginGetCompanies(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.KeyValuePairOfguidstring> EndGetCompanies(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarManagerApiChannel : CarManagerPhoneApp.CarManagerService.ICarManagerApi, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TimeToUpdateAuthorizedListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TimeToUpdateAuthorizedListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckBreakingRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckBreakingRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOfflineAndEmergencyAllowedDriversCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOfflineAndEmergencyAllowedDriversCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<CarManagerPhoneApp.CarManagerService.KeyValuePairOfArrayOfguidArrayOfguid0dMmj3_Sh> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<CarManagerPhoneApp.CarManagerService.KeyValuePairOfArrayOfguidArrayOfguid0dMmj3_Sh>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarIdByCarLicenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CarIdByCarLicenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<System.Guid> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.Guid>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StartNewRideCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StartNewRideCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<System.Guid> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.Guid>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecognizeUserStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RecognizeUserStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CarManagerPhoneApp.CarManagerService.eRecognizeStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CarManagerPhoneApp.CarManagerService.eRecognizeStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DriverIdByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DriverIdByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<System.Guid> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.Guid>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DriversToApproveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DriversToApproveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DriverIdByProviderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DriverIdByProviderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<System.Guid> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.Guid>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApproveDriversCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ApproveDriversCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddDriverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddDriverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<System.Guid> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.Guid>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserIdByProviderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserIdByProviderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmergencyDriveByFacebookIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EmergencyDriveByFacebookIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<System.Guid> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.Guid>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmergencyDriveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EmergencyDriveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<System.Guid> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.Guid>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendRideStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendRideStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<System.Guid> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.Guid>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCompaniesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCompaniesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.KeyValuePairOfguidstring> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.KeyValuePairOfguidstring>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarManagerApiClient : System.ServiceModel.ClientBase<CarManagerPhoneApp.CarManagerService.ICarManagerApi>, CarManagerPhoneApp.CarManagerService.ICarManagerApi {
        
        private BeginOperationDelegate onBeginTimeToUpdateAuthorizedListDelegate;
        
        private EndOperationDelegate onEndTimeToUpdateAuthorizedListDelegate;
        
        private System.Threading.SendOrPostCallback onTimeToUpdateAuthorizedListCompletedDelegate;
        
        private BeginOperationDelegate onBeginRestrictDrivingTimeDelegate;
        
        private EndOperationDelegate onEndRestrictDrivingTimeDelegate;
        
        private System.Threading.SendOrPostCallback onRestrictDrivingTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckBreakingRolesDelegate;
        
        private EndOperationDelegate onEndCheckBreakingRolesDelegate;
        
        private System.Threading.SendOrPostCallback onCheckBreakingRolesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOfflineAndEmergencyAllowedDriversDelegate;
        
        private EndOperationDelegate onEndGetOfflineAndEmergencyAllowedDriversDelegate;
        
        private System.Threading.SendOrPostCallback onGetOfflineAndEmergencyAllowedDriversCompletedDelegate;
        
        private BeginOperationDelegate onBeginCarIdByCarLicenceDelegate;
        
        private EndOperationDelegate onEndCarIdByCarLicenceDelegate;
        
        private System.Threading.SendOrPostCallback onCarIdByCarLicenceCompletedDelegate;
        
        private BeginOperationDelegate onBeginStartNewRideDelegate;
        
        private EndOperationDelegate onEndStartNewRideDelegate;
        
        private System.Threading.SendOrPostCallback onStartNewRideCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecognizeUserStatusDelegate;
        
        private EndOperationDelegate onEndRecognizeUserStatusDelegate;
        
        private System.Threading.SendOrPostCallback onRecognizeUserStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateOfflineRideDelegate;
        
        private EndOperationDelegate onEndUpdateOfflineRideDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateOfflineRideCompletedDelegate;
        
        private BeginOperationDelegate onBeginDriverIdByUserIdDelegate;
        
        private EndOperationDelegate onEndDriverIdByUserIdDelegate;
        
        private System.Threading.SendOrPostCallback onDriverIdByUserIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginDriversToApproveDelegate;
        
        private EndOperationDelegate onEndDriversToApproveDelegate;
        
        private System.Threading.SendOrPostCallback onDriversToApproveCompletedDelegate;
        
        private BeginOperationDelegate onBeginDriverIdByProviderIdDelegate;
        
        private EndOperationDelegate onEndDriverIdByProviderIdDelegate;
        
        private System.Threading.SendOrPostCallback onDriverIdByProviderIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginApproveDriversDelegate;
        
        private EndOperationDelegate onEndApproveDriversDelegate;
        
        private System.Threading.SendOrPostCallback onApproveDriversCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddDriverDelegate;
        
        private EndOperationDelegate onEndAddDriverDelegate;
        
        private System.Threading.SendOrPostCallback onAddDriverCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserIdByProviderIdDelegate;
        
        private EndOperationDelegate onEndUserIdByProviderIdDelegate;
        
        private System.Threading.SendOrPostCallback onUserIdByProviderIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginEmergencyDriveByFacebookIdDelegate;
        
        private EndOperationDelegate onEndEmergencyDriveByFacebookIdDelegate;
        
        private System.Threading.SendOrPostCallback onEmergencyDriveByFacebookIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginEmergencyDriveDelegate;
        
        private EndOperationDelegate onEndEmergencyDriveDelegate;
        
        private System.Threading.SendOrPostCallback onEmergencyDriveCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendRideStatisticsDelegate;
        
        private EndOperationDelegate onEndSendRideStatisticsDelegate;
        
        private System.Threading.SendOrPostCallback onSendRideStatisticsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendDrivePackageDelegate;
        
        private EndOperationDelegate onEndSendDrivePackageDelegate;
        
        private System.Threading.SendOrPostCallback onSendDrivePackageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCompaniesDelegate;
        
        private EndOperationDelegate onEndGetCompaniesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompaniesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CarManagerApiClient() {
        }
        
        public CarManagerApiClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CarManagerApiClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarManagerApiClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarManagerApiClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<TimeToUpdateAuthorizedListCompletedEventArgs> TimeToUpdateAuthorizedListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RestrictDrivingTimeCompleted;
        
        public event System.EventHandler<CheckBreakingRolesCompletedEventArgs> CheckBreakingRolesCompleted;
        
        public event System.EventHandler<GetOfflineAndEmergencyAllowedDriversCompletedEventArgs> GetOfflineAndEmergencyAllowedDriversCompleted;
        
        public event System.EventHandler<CarIdByCarLicenceCompletedEventArgs> CarIdByCarLicenceCompleted;
        
        public event System.EventHandler<StartNewRideCompletedEventArgs> StartNewRideCompleted;
        
        public event System.EventHandler<RecognizeUserStatusCompletedEventArgs> RecognizeUserStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateOfflineRideCompleted;
        
        public event System.EventHandler<DriverIdByUserIdCompletedEventArgs> DriverIdByUserIdCompleted;
        
        public event System.EventHandler<DriversToApproveCompletedEventArgs> DriversToApproveCompleted;
        
        public event System.EventHandler<DriverIdByProviderIdCompletedEventArgs> DriverIdByProviderIdCompleted;
        
        public event System.EventHandler<ApproveDriversCompletedEventArgs> ApproveDriversCompleted;
        
        public event System.EventHandler<AddDriverCompletedEventArgs> AddDriverCompleted;
        
        public event System.EventHandler<UserIdByProviderIdCompletedEventArgs> UserIdByProviderIdCompleted;
        
        public event System.EventHandler<EmergencyDriveByFacebookIdCompletedEventArgs> EmergencyDriveByFacebookIdCompleted;
        
        public event System.EventHandler<EmergencyDriveCompletedEventArgs> EmergencyDriveCompleted;
        
        public event System.EventHandler<SendRideStatisticsCompletedEventArgs> SendRideStatisticsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendDrivePackageCompleted;
        
        public event System.EventHandler<GetCompaniesCompletedEventArgs> GetCompaniesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginTimeToUpdateAuthorizedList(string carPlateNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTimeToUpdateAuthorizedList(carPlateNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndTimeToUpdateAuthorizedList(System.IAsyncResult result) {
            return base.Channel.EndTimeToUpdateAuthorizedList(result);
        }
        
        private System.IAsyncResult OnBeginTimeToUpdateAuthorizedList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string carPlateNumber = ((string)(inValues[0]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginTimeToUpdateAuthorizedList(carPlateNumber, callback, asyncState);
        }
        
        private object[] OnEndTimeToUpdateAuthorizedList(System.IAsyncResult result) {
            bool retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndTimeToUpdateAuthorizedList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTimeToUpdateAuthorizedListCompleted(object state) {
            if ((this.TimeToUpdateAuthorizedListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TimeToUpdateAuthorizedListCompleted(this, new TimeToUpdateAuthorizedListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TimeToUpdateAuthorizedListAsync(string carPlateNumber) {
            this.TimeToUpdateAuthorizedListAsync(carPlateNumber, null);
        }
        
        public void TimeToUpdateAuthorizedListAsync(string carPlateNumber, object userState) {
            if ((this.onBeginTimeToUpdateAuthorizedListDelegate == null)) {
                this.onBeginTimeToUpdateAuthorizedListDelegate = new BeginOperationDelegate(this.OnBeginTimeToUpdateAuthorizedList);
            }
            if ((this.onEndTimeToUpdateAuthorizedListDelegate == null)) {
                this.onEndTimeToUpdateAuthorizedListDelegate = new EndOperationDelegate(this.OnEndTimeToUpdateAuthorizedList);
            }
            if ((this.onTimeToUpdateAuthorizedListCompletedDelegate == null)) {
                this.onTimeToUpdateAuthorizedListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTimeToUpdateAuthorizedListCompleted);
            }
            base.InvokeAsync(this.onBeginTimeToUpdateAuthorizedListDelegate, new object[] {
                        carPlateNumber}, this.onEndTimeToUpdateAuthorizedListDelegate, this.onTimeToUpdateAuthorizedListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginRestrictDrivingTime(System.Guid carToDriverGuid, System.DateTime startTime, System.DateTime endTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRestrictDrivingTime(carToDriverGuid, startTime, endTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndRestrictDrivingTime(System.IAsyncResult result) {
            base.Channel.EndRestrictDrivingTime(result);
        }
        
        private System.IAsyncResult OnBeginRestrictDrivingTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid carToDriverGuid = ((System.Guid)(inValues[0]));
            System.DateTime startTime = ((System.DateTime)(inValues[1]));
            System.DateTime endTime = ((System.DateTime)(inValues[2]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginRestrictDrivingTime(carToDriverGuid, startTime, endTime, callback, asyncState);
        }
        
        private object[] OnEndRestrictDrivingTime(System.IAsyncResult result) {
            ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndRestrictDrivingTime(result);
            return null;
        }
        
        private void OnRestrictDrivingTimeCompleted(object state) {
            if ((this.RestrictDrivingTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RestrictDrivingTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RestrictDrivingTimeAsync(System.Guid carToDriverGuid, System.DateTime startTime, System.DateTime endTime) {
            this.RestrictDrivingTimeAsync(carToDriverGuid, startTime, endTime, null);
        }
        
        public void RestrictDrivingTimeAsync(System.Guid carToDriverGuid, System.DateTime startTime, System.DateTime endTime, object userState) {
            if ((this.onBeginRestrictDrivingTimeDelegate == null)) {
                this.onBeginRestrictDrivingTimeDelegate = new BeginOperationDelegate(this.OnBeginRestrictDrivingTime);
            }
            if ((this.onEndRestrictDrivingTimeDelegate == null)) {
                this.onEndRestrictDrivingTimeDelegate = new EndOperationDelegate(this.OnEndRestrictDrivingTime);
            }
            if ((this.onRestrictDrivingTimeCompletedDelegate == null)) {
                this.onRestrictDrivingTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRestrictDrivingTimeCompleted);
            }
            base.InvokeAsync(this.onBeginRestrictDrivingTimeDelegate, new object[] {
                        carToDriverGuid,
                        startTime,
                        endTime}, this.onEndRestrictDrivingTimeDelegate, this.onRestrictDrivingTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginCheckBreakingRoles(System.Guid driverId, string carPlateNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckBreakingRoles(driverId, carPlateNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<int> CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndCheckBreakingRoles(System.IAsyncResult result) {
            return base.Channel.EndCheckBreakingRoles(result);
        }
        
        private System.IAsyncResult OnBeginCheckBreakingRoles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid driverId = ((System.Guid)(inValues[0]));
            string carPlateNumber = ((string)(inValues[1]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginCheckBreakingRoles(driverId, carPlateNumber, callback, asyncState);
        }
        
        private object[] OnEndCheckBreakingRoles(System.IAsyncResult result) {
            System.Nullable<int> retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndCheckBreakingRoles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckBreakingRolesCompleted(object state) {
            if ((this.CheckBreakingRolesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckBreakingRolesCompleted(this, new CheckBreakingRolesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckBreakingRolesAsync(System.Guid driverId, string carPlateNumber) {
            this.CheckBreakingRolesAsync(driverId, carPlateNumber, null);
        }
        
        public void CheckBreakingRolesAsync(System.Guid driverId, string carPlateNumber, object userState) {
            if ((this.onBeginCheckBreakingRolesDelegate == null)) {
                this.onBeginCheckBreakingRolesDelegate = new BeginOperationDelegate(this.OnBeginCheckBreakingRoles);
            }
            if ((this.onEndCheckBreakingRolesDelegate == null)) {
                this.onEndCheckBreakingRolesDelegate = new EndOperationDelegate(this.OnEndCheckBreakingRoles);
            }
            if ((this.onCheckBreakingRolesCompletedDelegate == null)) {
                this.onCheckBreakingRolesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckBreakingRolesCompleted);
            }
            base.InvokeAsync(this.onBeginCheckBreakingRolesDelegate, new object[] {
                        driverId,
                        carPlateNumber}, this.onEndCheckBreakingRolesDelegate, this.onCheckBreakingRolesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginGetOfflineAndEmergencyAllowedDrivers(string carNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOfflineAndEmergencyAllowedDrivers(carNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<CarManagerPhoneApp.CarManagerService.KeyValuePairOfArrayOfguidArrayOfguid0dMmj3_Sh> CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndGetOfflineAndEmergencyAllowedDrivers(System.IAsyncResult result) {
            return base.Channel.EndGetOfflineAndEmergencyAllowedDrivers(result);
        }
        
        private System.IAsyncResult OnBeginGetOfflineAndEmergencyAllowedDrivers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string carNumber = ((string)(inValues[0]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginGetOfflineAndEmergencyAllowedDrivers(carNumber, callback, asyncState);
        }
        
        private object[] OnEndGetOfflineAndEmergencyAllowedDrivers(System.IAsyncResult result) {
            System.Nullable<CarManagerPhoneApp.CarManagerService.KeyValuePairOfArrayOfguidArrayOfguid0dMmj3_Sh> retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndGetOfflineAndEmergencyAllowedDrivers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOfflineAndEmergencyAllowedDriversCompleted(object state) {
            if ((this.GetOfflineAndEmergencyAllowedDriversCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOfflineAndEmergencyAllowedDriversCompleted(this, new GetOfflineAndEmergencyAllowedDriversCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOfflineAndEmergencyAllowedDriversAsync(string carNumber) {
            this.GetOfflineAndEmergencyAllowedDriversAsync(carNumber, null);
        }
        
        public void GetOfflineAndEmergencyAllowedDriversAsync(string carNumber, object userState) {
            if ((this.onBeginGetOfflineAndEmergencyAllowedDriversDelegate == null)) {
                this.onBeginGetOfflineAndEmergencyAllowedDriversDelegate = new BeginOperationDelegate(this.OnBeginGetOfflineAndEmergencyAllowedDrivers);
            }
            if ((this.onEndGetOfflineAndEmergencyAllowedDriversDelegate == null)) {
                this.onEndGetOfflineAndEmergencyAllowedDriversDelegate = new EndOperationDelegate(this.OnEndGetOfflineAndEmergencyAllowedDrivers);
            }
            if ((this.onGetOfflineAndEmergencyAllowedDriversCompletedDelegate == null)) {
                this.onGetOfflineAndEmergencyAllowedDriversCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOfflineAndEmergencyAllowedDriversCompleted);
            }
            base.InvokeAsync(this.onBeginGetOfflineAndEmergencyAllowedDriversDelegate, new object[] {
                        carNumber}, this.onEndGetOfflineAndEmergencyAllowedDriversDelegate, this.onGetOfflineAndEmergencyAllowedDriversCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginCarIdByCarLicence(string carLicence, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCarIdByCarLicence(carLicence, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<System.Guid> CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndCarIdByCarLicence(System.IAsyncResult result) {
            return base.Channel.EndCarIdByCarLicence(result);
        }
        
        private System.IAsyncResult OnBeginCarIdByCarLicence(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string carLicence = ((string)(inValues[0]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginCarIdByCarLicence(carLicence, callback, asyncState);
        }
        
        private object[] OnEndCarIdByCarLicence(System.IAsyncResult result) {
            System.Nullable<System.Guid> retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndCarIdByCarLicence(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCarIdByCarLicenceCompleted(object state) {
            if ((this.CarIdByCarLicenceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CarIdByCarLicenceCompleted(this, new CarIdByCarLicenceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CarIdByCarLicenceAsync(string carLicence) {
            this.CarIdByCarLicenceAsync(carLicence, null);
        }
        
        public void CarIdByCarLicenceAsync(string carLicence, object userState) {
            if ((this.onBeginCarIdByCarLicenceDelegate == null)) {
                this.onBeginCarIdByCarLicenceDelegate = new BeginOperationDelegate(this.OnBeginCarIdByCarLicence);
            }
            if ((this.onEndCarIdByCarLicenceDelegate == null)) {
                this.onEndCarIdByCarLicenceDelegate = new EndOperationDelegate(this.OnEndCarIdByCarLicence);
            }
            if ((this.onCarIdByCarLicenceCompletedDelegate == null)) {
                this.onCarIdByCarLicenceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCarIdByCarLicenceCompleted);
            }
            base.InvokeAsync(this.onBeginCarIdByCarLicenceDelegate, new object[] {
                        carLicence}, this.onEndCarIdByCarLicenceDelegate, this.onCarIdByCarLicenceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginStartNewRide(System.Guid driverId, System.DateTime startTime, string carLicenceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStartNewRide(driverId, startTime, carLicenceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<System.Guid> CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndStartNewRide(System.IAsyncResult result) {
            return base.Channel.EndStartNewRide(result);
        }
        
        private System.IAsyncResult OnBeginStartNewRide(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid driverId = ((System.Guid)(inValues[0]));
            System.DateTime startTime = ((System.DateTime)(inValues[1]));
            string carLicenceId = ((string)(inValues[2]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginStartNewRide(driverId, startTime, carLicenceId, callback, asyncState);
        }
        
        private object[] OnEndStartNewRide(System.IAsyncResult result) {
            System.Nullable<System.Guid> retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndStartNewRide(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStartNewRideCompleted(object state) {
            if ((this.StartNewRideCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartNewRideCompleted(this, new StartNewRideCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartNewRideAsync(System.Guid driverId, System.DateTime startTime, string carLicenceId) {
            this.StartNewRideAsync(driverId, startTime, carLicenceId, null);
        }
        
        public void StartNewRideAsync(System.Guid driverId, System.DateTime startTime, string carLicenceId, object userState) {
            if ((this.onBeginStartNewRideDelegate == null)) {
                this.onBeginStartNewRideDelegate = new BeginOperationDelegate(this.OnBeginStartNewRide);
            }
            if ((this.onEndStartNewRideDelegate == null)) {
                this.onEndStartNewRideDelegate = new EndOperationDelegate(this.OnEndStartNewRide);
            }
            if ((this.onStartNewRideCompletedDelegate == null)) {
                this.onStartNewRideCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartNewRideCompleted);
            }
            base.InvokeAsync(this.onBeginStartNewRideDelegate, new object[] {
                        driverId,
                        startTime,
                        carLicenceId}, this.onEndStartNewRideDelegate, this.onStartNewRideCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginRecognizeUserStatus(string providerUserId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecognizeUserStatus(providerUserId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CarManagerPhoneApp.CarManagerService.eRecognizeStatus CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndRecognizeUserStatus(System.IAsyncResult result) {
            return base.Channel.EndRecognizeUserStatus(result);
        }
        
        private System.IAsyncResult OnBeginRecognizeUserStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string providerUserId = ((string)(inValues[0]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginRecognizeUserStatus(providerUserId, callback, asyncState);
        }
        
        private object[] OnEndRecognizeUserStatus(System.IAsyncResult result) {
            CarManagerPhoneApp.CarManagerService.eRecognizeStatus retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndRecognizeUserStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRecognizeUserStatusCompleted(object state) {
            if ((this.RecognizeUserStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecognizeUserStatusCompleted(this, new RecognizeUserStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecognizeUserStatusAsync(string providerUserId) {
            this.RecognizeUserStatusAsync(providerUserId, null);
        }
        
        public void RecognizeUserStatusAsync(string providerUserId, object userState) {
            if ((this.onBeginRecognizeUserStatusDelegate == null)) {
                this.onBeginRecognizeUserStatusDelegate = new BeginOperationDelegate(this.OnBeginRecognizeUserStatus);
            }
            if ((this.onEndRecognizeUserStatusDelegate == null)) {
                this.onEndRecognizeUserStatusDelegate = new EndOperationDelegate(this.OnEndRecognizeUserStatus);
            }
            if ((this.onRecognizeUserStatusCompletedDelegate == null)) {
                this.onRecognizeUserStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecognizeUserStatusCompleted);
            }
            base.InvokeAsync(this.onBeginRecognizeUserStatusDelegate, new object[] {
                        providerUserId}, this.onEndRecognizeUserStatusDelegate, this.onRecognizeUserStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginUpdateOfflineRide(CarManagerPhoneApp.CarManagerService.DriveStatistics statistics, bool emergencyRide, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateOfflineRide(statistics, emergencyRide, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndUpdateOfflineRide(System.IAsyncResult result) {
            base.Channel.EndUpdateOfflineRide(result);
        }
        
        private System.IAsyncResult OnBeginUpdateOfflineRide(object[] inValues, System.AsyncCallback callback, object asyncState) {
            CarManagerPhoneApp.CarManagerService.DriveStatistics statistics = ((CarManagerPhoneApp.CarManagerService.DriveStatistics)(inValues[0]));
            bool emergencyRide = ((bool)(inValues[1]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginUpdateOfflineRide(statistics, emergencyRide, callback, asyncState);
        }
        
        private object[] OnEndUpdateOfflineRide(System.IAsyncResult result) {
            ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndUpdateOfflineRide(result);
            return null;
        }
        
        private void OnUpdateOfflineRideCompleted(object state) {
            if ((this.UpdateOfflineRideCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateOfflineRideCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateOfflineRideAsync(CarManagerPhoneApp.CarManagerService.DriveStatistics statistics, bool emergencyRide) {
            this.UpdateOfflineRideAsync(statistics, emergencyRide, null);
        }
        
        public void UpdateOfflineRideAsync(CarManagerPhoneApp.CarManagerService.DriveStatistics statistics, bool emergencyRide, object userState) {
            if ((this.onBeginUpdateOfflineRideDelegate == null)) {
                this.onBeginUpdateOfflineRideDelegate = new BeginOperationDelegate(this.OnBeginUpdateOfflineRide);
            }
            if ((this.onEndUpdateOfflineRideDelegate == null)) {
                this.onEndUpdateOfflineRideDelegate = new EndOperationDelegate(this.OnEndUpdateOfflineRide);
            }
            if ((this.onUpdateOfflineRideCompletedDelegate == null)) {
                this.onUpdateOfflineRideCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateOfflineRideCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateOfflineRideDelegate, new object[] {
                        statistics,
                        emergencyRide}, this.onEndUpdateOfflineRideDelegate, this.onUpdateOfflineRideCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginDriverIdByUserId(int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDriverIdByUserId(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<System.Guid> CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndDriverIdByUserId(System.IAsyncResult result) {
            return base.Channel.EndDriverIdByUserId(result);
        }
        
        private System.IAsyncResult OnBeginDriverIdByUserId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginDriverIdByUserId(userId, callback, asyncState);
        }
        
        private object[] OnEndDriverIdByUserId(System.IAsyncResult result) {
            System.Nullable<System.Guid> retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndDriverIdByUserId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDriverIdByUserIdCompleted(object state) {
            if ((this.DriverIdByUserIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DriverIdByUserIdCompleted(this, new DriverIdByUserIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DriverIdByUserIdAsync(int userId) {
            this.DriverIdByUserIdAsync(userId, null);
        }
        
        public void DriverIdByUserIdAsync(int userId, object userState) {
            if ((this.onBeginDriverIdByUserIdDelegate == null)) {
                this.onBeginDriverIdByUserIdDelegate = new BeginOperationDelegate(this.OnBeginDriverIdByUserId);
            }
            if ((this.onEndDriverIdByUserIdDelegate == null)) {
                this.onEndDriverIdByUserIdDelegate = new EndOperationDelegate(this.OnEndDriverIdByUserId);
            }
            if ((this.onDriverIdByUserIdCompletedDelegate == null)) {
                this.onDriverIdByUserIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDriverIdByUserIdCompleted);
            }
            base.InvokeAsync(this.onBeginDriverIdByUserIdDelegate, new object[] {
                        userId}, this.onEndDriverIdByUserIdDelegate, this.onDriverIdByUserIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginDriversToApprove(System.Guid companyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDriversToApprove(companyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<System.Guid> CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndDriversToApprove(System.IAsyncResult result) {
            return base.Channel.EndDriversToApprove(result);
        }
        
        private System.IAsyncResult OnBeginDriversToApprove(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid companyId = ((System.Guid)(inValues[0]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginDriversToApprove(companyId, callback, asyncState);
        }
        
        private object[] OnEndDriversToApprove(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<System.Guid> retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndDriversToApprove(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDriversToApproveCompleted(object state) {
            if ((this.DriversToApproveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DriversToApproveCompleted(this, new DriversToApproveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DriversToApproveAsync(System.Guid companyId) {
            this.DriversToApproveAsync(companyId, null);
        }
        
        public void DriversToApproveAsync(System.Guid companyId, object userState) {
            if ((this.onBeginDriversToApproveDelegate == null)) {
                this.onBeginDriversToApproveDelegate = new BeginOperationDelegate(this.OnBeginDriversToApprove);
            }
            if ((this.onEndDriversToApproveDelegate == null)) {
                this.onEndDriversToApproveDelegate = new EndOperationDelegate(this.OnEndDriversToApprove);
            }
            if ((this.onDriversToApproveCompletedDelegate == null)) {
                this.onDriversToApproveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDriversToApproveCompleted);
            }
            base.InvokeAsync(this.onBeginDriversToApproveDelegate, new object[] {
                        companyId}, this.onEndDriversToApproveDelegate, this.onDriversToApproveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginDriverIdByProviderId(string providerUserId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDriverIdByProviderId(providerUserId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<System.Guid> CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndDriverIdByProviderId(System.IAsyncResult result) {
            return base.Channel.EndDriverIdByProviderId(result);
        }
        
        private System.IAsyncResult OnBeginDriverIdByProviderId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string providerUserId = ((string)(inValues[0]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginDriverIdByProviderId(providerUserId, callback, asyncState);
        }
        
        private object[] OnEndDriverIdByProviderId(System.IAsyncResult result) {
            System.Nullable<System.Guid> retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndDriverIdByProviderId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDriverIdByProviderIdCompleted(object state) {
            if ((this.DriverIdByProviderIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DriverIdByProviderIdCompleted(this, new DriverIdByProviderIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DriverIdByProviderIdAsync(string providerUserId) {
            this.DriverIdByProviderIdAsync(providerUserId, null);
        }
        
        public void DriverIdByProviderIdAsync(string providerUserId, object userState) {
            if ((this.onBeginDriverIdByProviderIdDelegate == null)) {
                this.onBeginDriverIdByProviderIdDelegate = new BeginOperationDelegate(this.OnBeginDriverIdByProviderId);
            }
            if ((this.onEndDriverIdByProviderIdDelegate == null)) {
                this.onEndDriverIdByProviderIdDelegate = new EndOperationDelegate(this.OnEndDriverIdByProviderId);
            }
            if ((this.onDriverIdByProviderIdCompletedDelegate == null)) {
                this.onDriverIdByProviderIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDriverIdByProviderIdCompleted);
            }
            base.InvokeAsync(this.onBeginDriverIdByProviderIdDelegate, new object[] {
                        providerUserId}, this.onEndDriverIdByProviderIdDelegate, this.onDriverIdByProviderIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginApproveDrivers(System.Collections.ObjectModel.ObservableCollection<System.Guid> driversIdList, System.Guid CompanyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApproveDrivers(driversIdList, CompanyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndApproveDrivers(System.IAsyncResult result) {
            return base.Channel.EndApproveDrivers(result);
        }
        
        private System.IAsyncResult OnBeginApproveDrivers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<System.Guid> driversIdList = ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(inValues[0]));
            System.Guid CompanyId = ((System.Guid)(inValues[1]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginApproveDrivers(driversIdList, CompanyId, callback, asyncState);
        }
        
        private object[] OnEndApproveDrivers(System.IAsyncResult result) {
            bool retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndApproveDrivers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnApproveDriversCompleted(object state) {
            if ((this.ApproveDriversCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApproveDriversCompleted(this, new ApproveDriversCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApproveDriversAsync(System.Collections.ObjectModel.ObservableCollection<System.Guid> driversIdList, System.Guid CompanyId) {
            this.ApproveDriversAsync(driversIdList, CompanyId, null);
        }
        
        public void ApproveDriversAsync(System.Collections.ObjectModel.ObservableCollection<System.Guid> driversIdList, System.Guid CompanyId, object userState) {
            if ((this.onBeginApproveDriversDelegate == null)) {
                this.onBeginApproveDriversDelegate = new BeginOperationDelegate(this.OnBeginApproveDrivers);
            }
            if ((this.onEndApproveDriversDelegate == null)) {
                this.onEndApproveDriversDelegate = new EndOperationDelegate(this.OnEndApproveDrivers);
            }
            if ((this.onApproveDriversCompletedDelegate == null)) {
                this.onApproveDriversCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApproveDriversCompleted);
            }
            base.InvokeAsync(this.onBeginApproveDriversDelegate, new object[] {
                        driversIdList,
                        CompanyId}, this.onEndApproveDriversDelegate, this.onApproveDriversCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginAddDriver(CarManagerPhoneApp.CarManagerService.Driver newDriver, System.Collections.ObjectModel.ObservableCollection<System.Guid> companiesId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddDriver(newDriver, companiesId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<System.Guid> CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndAddDriver(System.IAsyncResult result) {
            return base.Channel.EndAddDriver(result);
        }
        
        private System.IAsyncResult OnBeginAddDriver(object[] inValues, System.AsyncCallback callback, object asyncState) {
            CarManagerPhoneApp.CarManagerService.Driver newDriver = ((CarManagerPhoneApp.CarManagerService.Driver)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<System.Guid> companiesId = ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(inValues[1]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginAddDriver(newDriver, companiesId, callback, asyncState);
        }
        
        private object[] OnEndAddDriver(System.IAsyncResult result) {
            System.Nullable<System.Guid> retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndAddDriver(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddDriverCompleted(object state) {
            if ((this.AddDriverCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddDriverCompleted(this, new AddDriverCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddDriverAsync(CarManagerPhoneApp.CarManagerService.Driver newDriver, System.Collections.ObjectModel.ObservableCollection<System.Guid> companiesId) {
            this.AddDriverAsync(newDriver, companiesId, null);
        }
        
        public void AddDriverAsync(CarManagerPhoneApp.CarManagerService.Driver newDriver, System.Collections.ObjectModel.ObservableCollection<System.Guid> companiesId, object userState) {
            if ((this.onBeginAddDriverDelegate == null)) {
                this.onBeginAddDriverDelegate = new BeginOperationDelegate(this.OnBeginAddDriver);
            }
            if ((this.onEndAddDriverDelegate == null)) {
                this.onEndAddDriverDelegate = new EndOperationDelegate(this.OnEndAddDriver);
            }
            if ((this.onAddDriverCompletedDelegate == null)) {
                this.onAddDriverCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddDriverCompleted);
            }
            base.InvokeAsync(this.onBeginAddDriverDelegate, new object[] {
                        newDriver,
                        companiesId}, this.onEndAddDriverDelegate, this.onAddDriverCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginUserIdByProviderId(string providerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserIdByProviderId(providerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<int> CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndUserIdByProviderId(System.IAsyncResult result) {
            return base.Channel.EndUserIdByProviderId(result);
        }
        
        private System.IAsyncResult OnBeginUserIdByProviderId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string providerId = ((string)(inValues[0]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginUserIdByProviderId(providerId, callback, asyncState);
        }
        
        private object[] OnEndUserIdByProviderId(System.IAsyncResult result) {
            System.Nullable<int> retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndUserIdByProviderId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserIdByProviderIdCompleted(object state) {
            if ((this.UserIdByProviderIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserIdByProviderIdCompleted(this, new UserIdByProviderIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserIdByProviderIdAsync(string providerId) {
            this.UserIdByProviderIdAsync(providerId, null);
        }
        
        public void UserIdByProviderIdAsync(string providerId, object userState) {
            if ((this.onBeginUserIdByProviderIdDelegate == null)) {
                this.onBeginUserIdByProviderIdDelegate = new BeginOperationDelegate(this.OnBeginUserIdByProviderId);
            }
            if ((this.onEndUserIdByProviderIdDelegate == null)) {
                this.onEndUserIdByProviderIdDelegate = new EndOperationDelegate(this.OnEndUserIdByProviderId);
            }
            if ((this.onUserIdByProviderIdCompletedDelegate == null)) {
                this.onUserIdByProviderIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserIdByProviderIdCompleted);
            }
            base.InvokeAsync(this.onBeginUserIdByProviderIdDelegate, new object[] {
                        providerId}, this.onEndUserIdByProviderIdDelegate, this.onUserIdByProviderIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginEmergencyDriveByFacebookId(string providerUserId, string carPlateNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmergencyDriveByFacebookId(providerUserId, carPlateNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<System.Guid> CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndEmergencyDriveByFacebookId(System.IAsyncResult result) {
            return base.Channel.EndEmergencyDriveByFacebookId(result);
        }
        
        private System.IAsyncResult OnBeginEmergencyDriveByFacebookId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string providerUserId = ((string)(inValues[0]));
            string carPlateNumber = ((string)(inValues[1]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginEmergencyDriveByFacebookId(providerUserId, carPlateNumber, callback, asyncState);
        }
        
        private object[] OnEndEmergencyDriveByFacebookId(System.IAsyncResult result) {
            System.Nullable<System.Guid> retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndEmergencyDriveByFacebookId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEmergencyDriveByFacebookIdCompleted(object state) {
            if ((this.EmergencyDriveByFacebookIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmergencyDriveByFacebookIdCompleted(this, new EmergencyDriveByFacebookIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmergencyDriveByFacebookIdAsync(string providerUserId, string carPlateNumber) {
            this.EmergencyDriveByFacebookIdAsync(providerUserId, carPlateNumber, null);
        }
        
        public void EmergencyDriveByFacebookIdAsync(string providerUserId, string carPlateNumber, object userState) {
            if ((this.onBeginEmergencyDriveByFacebookIdDelegate == null)) {
                this.onBeginEmergencyDriveByFacebookIdDelegate = new BeginOperationDelegate(this.OnBeginEmergencyDriveByFacebookId);
            }
            if ((this.onEndEmergencyDriveByFacebookIdDelegate == null)) {
                this.onEndEmergencyDriveByFacebookIdDelegate = new EndOperationDelegate(this.OnEndEmergencyDriveByFacebookId);
            }
            if ((this.onEmergencyDriveByFacebookIdCompletedDelegate == null)) {
                this.onEmergencyDriveByFacebookIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmergencyDriveByFacebookIdCompleted);
            }
            base.InvokeAsync(this.onBeginEmergencyDriveByFacebookIdDelegate, new object[] {
                        providerUserId,
                        carPlateNumber}, this.onEndEmergencyDriveByFacebookIdDelegate, this.onEmergencyDriveByFacebookIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginEmergencyDrive(System.Guid driverId, string carPlateNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmergencyDrive(driverId, carPlateNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<System.Guid> CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndEmergencyDrive(System.IAsyncResult result) {
            return base.Channel.EndEmergencyDrive(result);
        }
        
        private System.IAsyncResult OnBeginEmergencyDrive(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid driverId = ((System.Guid)(inValues[0]));
            string carPlateNumber = ((string)(inValues[1]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginEmergencyDrive(driverId, carPlateNumber, callback, asyncState);
        }
        
        private object[] OnEndEmergencyDrive(System.IAsyncResult result) {
            System.Nullable<System.Guid> retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndEmergencyDrive(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEmergencyDriveCompleted(object state) {
            if ((this.EmergencyDriveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmergencyDriveCompleted(this, new EmergencyDriveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmergencyDriveAsync(System.Guid driverId, string carPlateNumber) {
            this.EmergencyDriveAsync(driverId, carPlateNumber, null);
        }
        
        public void EmergencyDriveAsync(System.Guid driverId, string carPlateNumber, object userState) {
            if ((this.onBeginEmergencyDriveDelegate == null)) {
                this.onBeginEmergencyDriveDelegate = new BeginOperationDelegate(this.OnBeginEmergencyDrive);
            }
            if ((this.onEndEmergencyDriveDelegate == null)) {
                this.onEndEmergencyDriveDelegate = new EndOperationDelegate(this.OnEndEmergencyDrive);
            }
            if ((this.onEmergencyDriveCompletedDelegate == null)) {
                this.onEmergencyDriveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmergencyDriveCompleted);
            }
            base.InvokeAsync(this.onBeginEmergencyDriveDelegate, new object[] {
                        driverId,
                        carPlateNumber}, this.onEndEmergencyDriveDelegate, this.onEmergencyDriveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginSendRideStatistics(CarManagerPhoneApp.CarManagerService.DriveStatistics stas, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendRideStatistics(stas, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<System.Guid> CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndSendRideStatistics(System.IAsyncResult result) {
            return base.Channel.EndSendRideStatistics(result);
        }
        
        private System.IAsyncResult OnBeginSendRideStatistics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            CarManagerPhoneApp.CarManagerService.DriveStatistics stas = ((CarManagerPhoneApp.CarManagerService.DriveStatistics)(inValues[0]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginSendRideStatistics(stas, callback, asyncState);
        }
        
        private object[] OnEndSendRideStatistics(System.IAsyncResult result) {
            System.Nullable<System.Guid> retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndSendRideStatistics(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendRideStatisticsCompleted(object state) {
            if ((this.SendRideStatisticsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendRideStatisticsCompleted(this, new SendRideStatisticsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendRideStatisticsAsync(CarManagerPhoneApp.CarManagerService.DriveStatistics stas) {
            this.SendRideStatisticsAsync(stas, null);
        }
        
        public void SendRideStatisticsAsync(CarManagerPhoneApp.CarManagerService.DriveStatistics stas, object userState) {
            if ((this.onBeginSendRideStatisticsDelegate == null)) {
                this.onBeginSendRideStatisticsDelegate = new BeginOperationDelegate(this.OnBeginSendRideStatistics);
            }
            if ((this.onEndSendRideStatisticsDelegate == null)) {
                this.onEndSendRideStatisticsDelegate = new EndOperationDelegate(this.OnEndSendRideStatistics);
            }
            if ((this.onSendRideStatisticsCompletedDelegate == null)) {
                this.onSendRideStatisticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendRideStatisticsCompleted);
            }
            base.InvokeAsync(this.onBeginSendRideStatisticsDelegate, new object[] {
                        stas}, this.onEndSendRideStatisticsDelegate, this.onSendRideStatisticsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginSendDrivePackage(System.Guid rideId, CarManagerPhoneApp.CarManagerService.DrivePackage driveStas, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendDrivePackage(rideId, driveStas, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndSendDrivePackage(System.IAsyncResult result) {
            base.Channel.EndSendDrivePackage(result);
        }
        
        private System.IAsyncResult OnBeginSendDrivePackage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid rideId = ((System.Guid)(inValues[0]));
            CarManagerPhoneApp.CarManagerService.DrivePackage driveStas = ((CarManagerPhoneApp.CarManagerService.DrivePackage)(inValues[1]));
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginSendDrivePackage(rideId, driveStas, callback, asyncState);
        }
        
        private object[] OnEndSendDrivePackage(System.IAsyncResult result) {
            ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndSendDrivePackage(result);
            return null;
        }
        
        private void OnSendDrivePackageCompleted(object state) {
            if ((this.SendDrivePackageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendDrivePackageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendDrivePackageAsync(System.Guid rideId, CarManagerPhoneApp.CarManagerService.DrivePackage driveStas) {
            this.SendDrivePackageAsync(rideId, driveStas, null);
        }
        
        public void SendDrivePackageAsync(System.Guid rideId, CarManagerPhoneApp.CarManagerService.DrivePackage driveStas, object userState) {
            if ((this.onBeginSendDrivePackageDelegate == null)) {
                this.onBeginSendDrivePackageDelegate = new BeginOperationDelegate(this.OnBeginSendDrivePackage);
            }
            if ((this.onEndSendDrivePackageDelegate == null)) {
                this.onEndSendDrivePackageDelegate = new EndOperationDelegate(this.OnEndSendDrivePackage);
            }
            if ((this.onSendDrivePackageCompletedDelegate == null)) {
                this.onSendDrivePackageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendDrivePackageCompleted);
            }
            base.InvokeAsync(this.onBeginSendDrivePackageDelegate, new object[] {
                        rideId,
                        driveStas}, this.onEndSendDrivePackageDelegate, this.onSendDrivePackageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CarManagerPhoneApp.CarManagerService.ICarManagerApi.BeginGetCompanies(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompanies(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.KeyValuePairOfguidstring> CarManagerPhoneApp.CarManagerService.ICarManagerApi.EndGetCompanies(System.IAsyncResult result) {
            return base.Channel.EndGetCompanies(result);
        }
        
        private System.IAsyncResult OnBeginGetCompanies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).BeginGetCompanies(callback, asyncState);
        }
        
        private object[] OnEndGetCompanies(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.KeyValuePairOfguidstring> retVal = ((CarManagerPhoneApp.CarManagerService.ICarManagerApi)(this)).EndGetCompanies(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCompaniesCompleted(object state) {
            if ((this.GetCompaniesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompaniesCompleted(this, new GetCompaniesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompaniesAsync() {
            this.GetCompaniesAsync(null);
        }
        
        public void GetCompaniesAsync(object userState) {
            if ((this.onBeginGetCompaniesDelegate == null)) {
                this.onBeginGetCompaniesDelegate = new BeginOperationDelegate(this.OnBeginGetCompanies);
            }
            if ((this.onEndGetCompaniesDelegate == null)) {
                this.onEndGetCompaniesDelegate = new EndOperationDelegate(this.OnEndGetCompanies);
            }
            if ((this.onGetCompaniesCompletedDelegate == null)) {
                this.onGetCompaniesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompaniesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompaniesDelegate, null, this.onEndGetCompaniesDelegate, this.onGetCompaniesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override CarManagerPhoneApp.CarManagerService.ICarManagerApi CreateChannel() {
            return new CarManagerApiClientChannel(this);
        }
        
        private class CarManagerApiClientChannel : ChannelBase<CarManagerPhoneApp.CarManagerService.ICarManagerApi>, CarManagerPhoneApp.CarManagerService.ICarManagerApi {
            
            public CarManagerApiClientChannel(System.ServiceModel.ClientBase<CarManagerPhoneApp.CarManagerService.ICarManagerApi> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginTimeToUpdateAuthorizedList(string carPlateNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = carPlateNumber;
                System.IAsyncResult _result = base.BeginInvoke("TimeToUpdateAuthorizedList", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndTimeToUpdateAuthorizedList(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("TimeToUpdateAuthorizedList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRestrictDrivingTime(System.Guid carToDriverGuid, System.DateTime startTime, System.DateTime endTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = carToDriverGuid;
                _args[1] = startTime;
                _args[2] = endTime;
                System.IAsyncResult _result = base.BeginInvoke("RestrictDrivingTime", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRestrictDrivingTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RestrictDrivingTime", _args, result);
            }
            
            public System.IAsyncResult BeginCheckBreakingRoles(System.Guid driverId, string carPlateNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = driverId;
                _args[1] = carPlateNumber;
                System.IAsyncResult _result = base.BeginInvoke("CheckBreakingRoles", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<int> EndCheckBreakingRoles(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<int> _result = ((System.Nullable<int>)(base.EndInvoke("CheckBreakingRoles", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOfflineAndEmergencyAllowedDrivers(string carNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = carNumber;
                System.IAsyncResult _result = base.BeginInvoke("GetOfflineAndEmergencyAllowedDrivers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<CarManagerPhoneApp.CarManagerService.KeyValuePairOfArrayOfguidArrayOfguid0dMmj3_Sh> EndGetOfflineAndEmergencyAllowedDrivers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<CarManagerPhoneApp.CarManagerService.KeyValuePairOfArrayOfguidArrayOfguid0dMmj3_Sh> _result = ((System.Nullable<CarManagerPhoneApp.CarManagerService.KeyValuePairOfArrayOfguidArrayOfguid0dMmj3_Sh>)(base.EndInvoke("GetOfflineAndEmergencyAllowedDrivers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCarIdByCarLicence(string carLicence, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = carLicence;
                System.IAsyncResult _result = base.BeginInvoke("CarIdByCarLicence", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<System.Guid> EndCarIdByCarLicence(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<System.Guid> _result = ((System.Nullable<System.Guid>)(base.EndInvoke("CarIdByCarLicence", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginStartNewRide(System.Guid driverId, System.DateTime startTime, string carLicenceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = driverId;
                _args[1] = startTime;
                _args[2] = carLicenceId;
                System.IAsyncResult _result = base.BeginInvoke("StartNewRide", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<System.Guid> EndStartNewRide(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<System.Guid> _result = ((System.Nullable<System.Guid>)(base.EndInvoke("StartNewRide", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRecognizeUserStatus(string providerUserId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = providerUserId;
                System.IAsyncResult _result = base.BeginInvoke("RecognizeUserStatus", _args, callback, asyncState);
                return _result;
            }
            
            public CarManagerPhoneApp.CarManagerService.eRecognizeStatus EndRecognizeUserStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                CarManagerPhoneApp.CarManagerService.eRecognizeStatus _result = ((CarManagerPhoneApp.CarManagerService.eRecognizeStatus)(base.EndInvoke("RecognizeUserStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateOfflineRide(CarManagerPhoneApp.CarManagerService.DriveStatistics statistics, bool emergencyRide, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = statistics;
                _args[1] = emergencyRide;
                System.IAsyncResult _result = base.BeginInvoke("UpdateOfflineRide", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateOfflineRide(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateOfflineRide", _args, result);
            }
            
            public System.IAsyncResult BeginDriverIdByUserId(int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("DriverIdByUserId", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<System.Guid> EndDriverIdByUserId(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<System.Guid> _result = ((System.Nullable<System.Guid>)(base.EndInvoke("DriverIdByUserId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDriversToApprove(System.Guid companyId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = companyId;
                System.IAsyncResult _result = base.BeginInvoke("DriversToApprove", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<System.Guid> EndDriversToApprove(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<System.Guid> _result = ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(base.EndInvoke("DriversToApprove", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDriverIdByProviderId(string providerUserId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = providerUserId;
                System.IAsyncResult _result = base.BeginInvoke("DriverIdByProviderId", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<System.Guid> EndDriverIdByProviderId(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<System.Guid> _result = ((System.Nullable<System.Guid>)(base.EndInvoke("DriverIdByProviderId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginApproveDrivers(System.Collections.ObjectModel.ObservableCollection<System.Guid> driversIdList, System.Guid CompanyId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = driversIdList;
                _args[1] = CompanyId;
                System.IAsyncResult _result = base.BeginInvoke("ApproveDrivers", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndApproveDrivers(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ApproveDrivers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddDriver(CarManagerPhoneApp.CarManagerService.Driver newDriver, System.Collections.ObjectModel.ObservableCollection<System.Guid> companiesId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = newDriver;
                _args[1] = companiesId;
                System.IAsyncResult _result = base.BeginInvoke("AddDriver", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<System.Guid> EndAddDriver(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<System.Guid> _result = ((System.Nullable<System.Guid>)(base.EndInvoke("AddDriver", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserIdByProviderId(string providerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = providerId;
                System.IAsyncResult _result = base.BeginInvoke("UserIdByProviderId", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<int> EndUserIdByProviderId(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<int> _result = ((System.Nullable<int>)(base.EndInvoke("UserIdByProviderId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEmergencyDriveByFacebookId(string providerUserId, string carPlateNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = providerUserId;
                _args[1] = carPlateNumber;
                System.IAsyncResult _result = base.BeginInvoke("EmergencyDriveByFacebookId", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<System.Guid> EndEmergencyDriveByFacebookId(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<System.Guid> _result = ((System.Nullable<System.Guid>)(base.EndInvoke("EmergencyDriveByFacebookId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEmergencyDrive(System.Guid driverId, string carPlateNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = driverId;
                _args[1] = carPlateNumber;
                System.IAsyncResult _result = base.BeginInvoke("EmergencyDrive", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<System.Guid> EndEmergencyDrive(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<System.Guid> _result = ((System.Nullable<System.Guid>)(base.EndInvoke("EmergencyDrive", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSendRideStatistics(CarManagerPhoneApp.CarManagerService.DriveStatistics stas, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = stas;
                System.IAsyncResult _result = base.BeginInvoke("SendRideStatistics", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<System.Guid> EndSendRideStatistics(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<System.Guid> _result = ((System.Nullable<System.Guid>)(base.EndInvoke("SendRideStatistics", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSendDrivePackage(System.Guid rideId, CarManagerPhoneApp.CarManagerService.DrivePackage driveStas, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = rideId;
                _args[1] = driveStas;
                System.IAsyncResult _result = base.BeginInvoke("SendDrivePackage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendDrivePackage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendDrivePackage", _args, result);
            }
            
            public System.IAsyncResult BeginGetCompanies(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCompanies", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.KeyValuePairOfguidstring> EndGetCompanies(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.KeyValuePairOfguidstring> _result = ((System.Collections.ObjectModel.ObservableCollection<CarManagerPhoneApp.CarManagerService.KeyValuePairOfguidstring>)(base.EndInvoke("GetCompanies", _args, result)));
                return _result;
            }
        }
    }
}
